version: '3.8'

services:
  nic-etl-pipeline:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: nic-etl-pipeline
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - GITLAB_ACCESS_TOKEN=${GITLAB_ACCESS_TOKEN}
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - GITLAB_URL=${GITLAB_URL:-http://gitlab.processa.info}
      - QDRANT_URL=${QDRANT_URL:-https://qdrant.codrstudio.dev/}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - MAX_CONCURRENT_DOCS=${MAX_CONCURRENT_DOCS:-5}
      - CHUNK_SIZE=${CHUNK_SIZE:-500}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-100}
    volumes:
      - ./logs:/app/logs
      - ./cache:/app/cache
      - ./data:/app/data
    ports:
      - "8888:8888"  # Jupyter Lab
      - "8000:8000"  # Health check endpoint
    restart: unless-stopped
    networks:
      - nic-etl-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nic-etl-monitoring:
    image: prom/prometheus:latest
    container_name: nic-etl-monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - nic-etl-network
    restart: unless-stopped

  nic-etl-grafana:
    image: grafana/grafana:latest
    container_name: nic-etl-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - nic-etl-network
    restart: unless-stopped
    depends_on:
      - nic-etl-monitoring

volumes:
  prometheus_data:
  grafana_data:

networks:
  nic-etl-network:
    driver: bridge