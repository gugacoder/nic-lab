services:
  nic-etl:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: nic-etl-pipeline
    restart: unless-stopped
    
    # Portas - apenas 5000 exposta publicamente
    ports:
      - "5000:5000"
    
    # Variáveis de ambiente
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - JUPYTER_PORT=5001
      - PROXY_PORT=5000
      - PYTHONUNBUFFERED=1
    
    # Arquivos de ambiente
    env_file:
      - ../.env.${ENVIRONMENT:-development}
    
    # Volumes persistentes
    volumes:
      - pipeline-data:/app/pipeline-data
      - logs:/app/logs
      - ../static:/app/static:ro
      - ../notebooks:/app/notebooks:ro
    
    # Recursos
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    
    # Healthcheck
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Dependências
    depends_on:
      - qdrant
    
    # Rede interna
    networks:
      - nic-network

  # QDrant Vector Database (opcional - pode usar instância externa)
  qdrant:
    image: qdrant/qdrant:v1.7.0
    container_name: nic-qdrant
    restart: unless-stopped
    
    # Porta interna apenas (não exposta publicamente)
    expose:
      - "6333"
    
    # Dados persistentes
    volumes:
      - qdrant-data:/qdrant/storage
    
    # Configuração
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    
    # Rede interna
    networks:
      - nic-network

  # Nginx Proxy (opcional - para produção)
  nginx:
    image: nginx:alpine
    container_name: nic-nginx
    restart: unless-stopped
    
    # Porta pública
    ports:
      - "80:80"
      - "443:443"
    
    # Configuração
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    
    # Dependências
    depends_on:
      - nic-etl
    
    # Rede
    networks:
      - nic-network
    
    # Perfil para produção
    profiles:
      - production

# Volumes nomeados
volumes:
  pipeline-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/pipeline-data
  
  logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/logs
  
  qdrant-data:
    driver: local

# Rede interna
networks:
  nic-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16